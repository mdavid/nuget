<?xml version="1.0" encoding="utf-8" ?>
<Configuration>
    <ViewDefinitions>
        <View>
            <Name>NuGet.IPackage.Table</Name>
            <ViewSelectedBy>
                <TypeName>NuGet.ZipPackage</TypeName>
                <TypeName>NuGet.DataServicePackage</TypeName>
                <TypeName>NuGet.VisualStudio.RecentPackage</TypeName>
            </ViewSelectedBy>

            <TableControl>
                <TableHeaders>
                    <TableColumnHeader>
                        <Label>Id</Label>
                        <Width>30</Width>
                    </TableColumnHeader>
                    <TableColumnHeader>
                        <Label>Version</Label>
                        <Width>20</Width>
                    </TableColumnHeader>
                    <TableColumnHeader>
                        <Label>Description</Label>
                    </TableColumnHeader>
                </TableHeaders>
                <TableRowEntries>
                    <TableRowEntry>
                        <TableColumnItems>
                            <TableColumnItem>
                                <PropertyName>Id</PropertyName>
                            </TableColumnItem>
                            <TableColumnItem>
                                <PropertyName>Version</PropertyName>
                            </TableColumnItem>
                            <TableColumnItem>
                                <PropertyName>Description</PropertyName>
                            </TableColumnItem>
                        </TableColumnItems>
                    </TableRowEntry>
                </TableRowEntries>
            </TableControl>
        </View>

        <View>
            <Name>NuGet.IPackage.List</Name>
            <ViewSelectedBy>
                <TypeName>NuGet.ZipPackage</TypeName>
                <TypeName>NuGet.VisualStudio.RecentPackage</TypeName>
            </ViewSelectedBy>

            <ListControl>
                <ListEntries>
                    <ListEntry>
                        <ListItems>
                            <ListItem>
                                <PropertyName>Id</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>Version</PropertyName>
                            </ListItem>
                            <ListItem>
                                <Label>Authors</Label>
                                <ScriptBlock>
                                    $authors = if ($_.Authors -is [string[]]) { $_.Authors -join ',' } else { $_.Authors };
                                    return $authors;
                                </ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <PropertyName>Description</PropertyName>
                            </ListItem>
                            <ListItem>
                                <Label>Dependencies</Label>
                                <ScriptBlock>
                                    $dependencies = if ($_.Dependencies -is [string]) { $_.Dependencies.Split('|') } else { $_.Dependencies };
                                    return $dependencies;
                                </ScriptBlock>
                            </ListItem>
                        </ListItems>
                    </ListEntry>
                </ListEntries>
            </ListControl>
        </View>

        <View>
            <Name>NuGet.IPackage.List</Name>
            <ViewSelectedBy>
                <TypeName>NuGet.DataServicePackage</TypeName>
            </ViewSelectedBy>

            <ListControl>
                <ListEntries>
                    <ListEntry>
                        <ListItems>
                            <ListItem>
                                <PropertyName>Id</PropertyName>
                            </ListItem>
                            <ListItem>
                                <PropertyName>Version</PropertyName>
                            </ListItem>
                            <ListItem>
                                <Label>Authors</Label>
                                <ScriptBlock>
                                    $authors = if ($_.Authors -is [string[]]) { $_.Authors -join ',' } else { $_.Authors };
                                    return $authors;
                                </ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <PropertyName>Description</PropertyName>
                            </ListItem>
                            <ListItem>
                                <Label>Dependencies</Label>
                                <ScriptBlock>
                                    $dependencies = if ($_.Dependencies -is [string]) { $_.Dependencies.Split('|') } else { $_.Dependencies };
                                    return $dependencies;
                                </ScriptBlock>
                            </ListItem>
                            <ListItem>
                                <Label>Downloads</Label>
                                <PropertyName>DownloadCount</PropertyName>
                            </ListItem>
                        </ListItems>
                    </ListEntry>
                </ListEntries>
            </ListControl>
        </View>

        <View>
            <Name>EnvDTE.Project</Name>
            <ViewSelectedBy>
                <TypeName>System.__ComObject#{866311e6-c887-4143-9833-645f5b93f6f1}</TypeName>
                <TypeName>Microsoft.VisualStudio.FSharp.ProjectSystem.Automation.OAProject</TypeName>
            </ViewSelectedBy>
            <TableControl>
                <TableHeaders>
                    <TableColumnHeader>
                        <Label>ProjectName</Label>
                        <Width>40</Width>
                    </TableColumnHeader>
                    <TableColumnHeader>
                        <Width>20</Width>
                        <Label>Type</Label>
                    </TableColumnHeader>
                    <TableColumnHeader>
                        <Label>FullName</Label>
                    </TableColumnHeader>
                </TableHeaders>
                <TableRowEntries>
                    <TableRowEntry>
                        <TableColumnItems>
                            <TableColumnItem>
                              <ScriptBlock>
                                # only perform special formatting for web site projects
                                if ($_.kind -ne "{E24C65DC-7377-472B-9ABA-BC803B73C61A}") {
                                    return $_.name
                                }

                                # NOTE: if the column header width changes, change this too.
                                $colWidth = 40

                                # less than column width, do nothing
                                if ($_.name.length -le $colWidth) {
                                    return $_.name
                                }

                                $folder = "\{0}\" -f (split-path -leaf $_.name)
                                $root = [io.path]::GetPathRoot($_.name)
                                $maxwidth = $colwidth - 6 # len(root + ellipsis)

                                # is the directory name too big?
                                if ($folder.length -ge $maxwidth) {
                                    # yes, drop leading backslash and eat into name
                                    $abbreviated = "{0}...{1}" -f $root, `
                                        $folder.substring($folder.length - $maxwidth)
                                }
                                else {
                                    # no, show like VS solution explorer (drive+ellipsis+end)
                                    $abbreviated = "{0}...{1}" -f $root, $folder
                                }
                                return $abbreviated
                              </ScriptBlock>
                            </TableColumnItem>
                            <TableColumnItem>
                                <PropertyName>Type</PropertyName>
                            </TableColumnItem>
                            <TableColumnItem>
                                <PropertyName>FullName</PropertyName>
                            </TableColumnItem>
                        </TableColumnItems>
                    </TableRowEntry>
                </TableRowEntries>
            </TableControl>
        </View>
        
        <View>
            <Name>NuGet.Runtime.AssemblyBinding</Name>
            <ViewSelectedBy>
                <TypeName>NuGet.Runtime.AssemblyBinding</TypeName>
            </ViewSelectedBy>
            <TableControl>
                <TableHeaders>
                    <TableColumnHeader>
                        <Width>40</Width>
                    </TableColumnHeader>
                    <TableColumnHeader />
                    <TableColumnHeader />
                </TableHeaders>
                <TableRowEntries>
                    <TableRowEntry>
                        <TableColumnItems>
                            <TableColumnItem>
                                <PropertyName>Name</PropertyName>
                            </TableColumnItem>
                            <TableColumnItem>
                                <PropertyName>OldVersion</PropertyName>
                            </TableColumnItem>
                            <TableColumnItem>
                                <PropertyName>NewVersion</PropertyName>
                            </TableColumnItem>
                        </TableColumnItems>
                    </TableRowEntry>
                </TableRowEntries>
            </TableControl>
        </View>

    </ViewDefinitions>
</Configuration>