//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NuGet.Common {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class NuGetResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal NuGetResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NuGet.Common.NuGetResources", typeof(NuGetResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Help command is used to display general help and also help information about other commands..
        /// </summary>
        internal static string HelpCommandDescription {
            get {
                return ResourceManager.GetString("HelpCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pass a command name to display help information for that command..
        /// </summary>
        internal static string HelpCommandUsageDecription {
            get {
                return ResourceManager.GetString("HelpCommandUsageDecription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [command].
        /// </summary>
        internal static string HelpCommandUsageSummary {
            get {
                return ResourceManager.GetString("HelpCommandUsageSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid option value: &apos;{0} {1}&apos;.
        /// </summary>
        internal static string InvalidOptionValueError {
            get {
                return ResourceManager.GetString("InvalidOptionValueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays a list of packages at a given source. If no source is define the default feed is used..
        /// </summary>
        internal static string ListCommandDescription {
            get {
                return ResourceManager.GetString("ListCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No packages found..
        /// </summary>
        internal static string ListCommandNoPackages {
            get {
                return ResourceManager.GetString("ListCommandNoPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The location to look for packages..
        /// </summary>
        internal static string ListCommandSourceDescription {
            get {
                return ResourceManager.GetString("ListCommandSourceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify optional search terms..
        /// </summary>
        internal static string ListCommandUsageDescription {
            get {
                return ResourceManager.GetString("ListCommandUsageDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [search terms] [options].
        /// </summary>
        internal static string ListCommandUsageSummary {
            get {
                return ResourceManager.GetString("ListCommandUsageSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display a detailed list of information for each package..
        /// </summary>
        internal static string ListCommandVerboseListDescription {
            get {
                return ResourceManager.GetString("ListCommandVerboseListDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing option value for: &apos;{0}&apos;.
        /// </summary>
        internal static string MissingOptionValueError {
            get {
                return ResourceManager.GetString("MissingOptionValueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [option] on &apos;{0}&apos; is invalid without a setter..
        /// </summary>
        internal static string OptionInvalidWithoutSetter {
            get {
                return ResourceManager.GetString("OptionInvalidWithoutSetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Base Path of the files defined in the nuspec file..
        /// </summary>
        internal static string PackageCommandBasePathDescription {
            get {
                return ResourceManager.GetString("PackageCommandBasePathDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creates a NuGet package based on the provided NuSpec file..
        /// </summary>
        internal static string PackageCommandDescription {
            get {
                return ResourceManager.GetString("PackageCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the directory for the created NuGet file.
        /// </summary>
        internal static string PackageCommandOutputDirDescription {
            get {
                return ResourceManager.GetString("PackageCommandOutputDirDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify a nuspec file to use..
        /// </summary>
        internal static string PackageCommandSpecifyNuSpecFileError {
            get {
                return ResourceManager.GetString("PackageCommandSpecifyNuSpecFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully created package &apos;{0}&apos;..
        /// </summary>
        internal static string PackageCommandSuccess {
            get {
                return ResourceManager.GetString("PackageCommandSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the location of the manifest (Nuspec) file to create a package..
        /// </summary>
        internal static string PackageCommandUsageDescription {
            get {
                return ResourceManager.GetString("PackageCommandUsageDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;manifest&gt; [options].
        /// </summary>
        internal static string PackageCommandUsageSummary {
            get {
                return ResourceManager.GetString("PackageCommandUsageSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating an entry for your package [ID:{0} Ver:{1}]....
        /// </summary>
        internal static string PushCommandCreatingPackage {
            get {
                return ResourceManager.GetString("PushCommandCreatingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Push a package to the server and publish it to the feed..
        /// </summary>
        internal static string PushCommandDescription {
            get {
                return ResourceManager.GetString("PushCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: {1}.
        /// </summary>
        internal static string PushCommandInvalidResponse {
            get {
                return ResourceManager.GetString("PushCommandInvalidResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your package has been uploaded to the server but not published..
        /// </summary>
        internal static string PushCommandPackageCreated {
            get {
                return ResourceManager.GetString("PushCommandPackageCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your package has been published to the live feed..
        /// </summary>
        internal static string PushCommandPackagePublished {
            get {
                return ResourceManager.GetString("PushCommandPackagePublished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies if the package should be published to the live feed. True by default..
        /// </summary>
        internal static string PushCommandPublishDescription {
            get {
                return ResourceManager.GetString("PushCommandPublishDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publishing your package [ID:{0} Ver:{1}] to the live feed....
        /// </summary>
        internal static string PushCommandPublishingPackage {
            get {
                return ResourceManager.GetString("PushCommandPublishingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the location of the package and your API key to push the package to the server..
        /// </summary>
        internal static string PushCommandUsageDescription {
            get {
                return ResourceManager.GetString("PushCommandUsageDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;package location&gt; &lt;API key&gt; [options].
        /// </summary>
        internal static string PushCommandUsageSummary {
            get {
                return ResourceManager.GetString("PushCommandUsageSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resource type &apos;{0}&apos; does not have an accessible get for the &apos;{1}&apos; property..
        /// </summary>
        internal static string ResourcePropertyDoesNotHaveAccessibleGet {
            get {
                return ResourceManager.GetString("ResourcePropertyDoesNotHaveAccessibleGet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{0}&apos; on resource type &apos;{1}&apos; is not a string type..
        /// </summary>
        internal static string ResourcePropertyNotStringType {
            get {
                return ResourceManager.GetString("ResourcePropertyNotStringType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resource type &apos;{0}&apos; does not have an accessible static property named &apos;{1}&apos;..
        /// </summary>
        internal static string ResourceTypeDoesNotHaveProperty {
            get {
                return ResourceManager.GetString("ResourceTypeDoesNotHaveProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too little arguments..
        /// </summary>
        internal static string TooFewArgsError {
            get {
                return ResourceManager.GetString("TooFewArgsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many arguments..
        /// </summary>
        internal static string TooManyArgsError {
            get {
                return ResourceManager.GetString("TooManyArgsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to change from type &apos;{0}&apos; to &apos;{1}&apos;..
        /// </summary>
        internal static string UnableToConvertTypeError {
            get {
                return ResourceManager.GetString("UnableToConvertTypeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown command: &apos;{0}&apos;.
        /// </summary>
        internal static string UnknowCommandError {
            get {
                return ResourceManager.GetString("UnknowCommandError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown option: &apos;{0}&apos;.
        /// </summary>
        internal static string UnknownOptionError {
            get {
                return ResourceManager.GetString("UnknownOptionError", resourceCulture);
            }
        }
    }
}
