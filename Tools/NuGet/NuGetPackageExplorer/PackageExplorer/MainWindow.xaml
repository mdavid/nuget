<Window x:Class="PackageExplorer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:self="clr-namespace:PackageExplorer"
        xmlns:viewmodel="clr-namespace:PackageExplorerViewModel;assembly=PackageViewModel"
        xmlns:resources="clr-namespace:PackageExplorer.Resources"
        xmlns:effect="clr-namespace:GrayscaleEffect;assembly=GrayscaleEffect"
        xmlns:settings="clr-namespace:PackageExplorer.Properties"
        Title="{Binding WindowTitle, FallbackValue={x:Static resources:Resources.Dialog_Title}}" 
        Height="650" 
        Width="750" 
        MinWidth="600" 
        MinHeight="300" 
        Background="{DynamicResource {x:Static SystemColors.AppWorkspaceBrushKey}}"
        Icon="/NuGetPackageExplorer;component/Images/packageicon.png" 
        FontSize="{Binding FontSize, Source={x:Static settings:Settings.Default}}"
        AllowDrop="True"
        DragOver="Window_DragOver"
        Drop="Window_Drop"
        Closing="Window_Closing">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="TemplateStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <viewmodel:DisabledCommand x:Key="DisabledCommand" />

            <self:PackagePartToBoolConverter x:Key="PackagePartConverter" />
            <self:TruncateFilePathConverter x:Key="TruncatePathConverter" />

            <ContextMenu x:Key="SharedContextMenu">
                <MenuItem Header="_View Content" Command="{Binding ViewCommand}" CommandParameter="{Binding}" FontWeight="SemiBold" />
                <MenuItem Header="_Open in Windows shell..." Command="{Binding OpenCommand}" CommandParameter="{Binding}" />
                <MenuItem Header="Open with..." Command="{Binding OpenWithCommand}" CommandParameter="{Binding}" />
                <MenuItem Header="_Save As..." Command="{Binding SaveCommand}" CommandParameter="{Binding}" />
                <Separator />
                <MenuItem Header="_Rename..." Click="OnRenameItemClick" />
                <MenuItem Header="_Delete" Command="{Binding DeleteCommand}" CommandParameter="{Binding}" />
            </ContextMenu>

            <ContextMenu x:Key="FolderSharedContextMenu">
                <MenuItem Header="_Add Existing File..." Command="{Binding AddContentFileCommand}" CommandParameter="{Binding}" />
                <MenuItem Header="Add Ne_w Folder..." Click="OnAddNewFolderClick" />
                <MenuItem Header="_Rename..." Click="OnRenameItemClick" />
                <MenuItem Header="_Delete" Command="{Binding DeleteCommand}" CommandParameter="{Binding}" />
            </ContextMenu>

            <!-- data template for the package details pane -->
            <DataTemplate x:Key="PackageDetailTemplate">
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                    <StackPanel Margin="8">
                        <Border 
                            BorderBrush="{StaticResource {x:Static SystemColors.ActiveBorderBrushKey}}" 
                            BorderThickness="0.5" 
                            HorizontalAlignment="Left" 
                            Padding="2"
                            Background="White"
                            Margin="0,0,0,5"
                            ToolTipService.ToolTip="{Binding IconUrl, Mode=OneTime}"
                            Visibility="{Binding IconUrl, Converter={StaticResource NullToVisibilityConverter}}">
                            <Image         
                                Source="{Binding IconUrl}" 
                                Width="32" 
                                Height="32" 
                                Stretch="Fill" 
                                StretchDirection="DownOnly" />
                        </Border>

                        <!-- Id -->
                        <StackPanel Style="{StaticResource DetailMetadataStyle}">
                            <TextBlock Text="{x:Static resources:Resources.Dialog_IdLabel}" Style="{StaticResource DetailMetadataLabelStyle}" />
                            <TextBlock Text="{Binding Id}" Style="{StaticResource DetailMetadataValueStyle}"  />
                        </StackPanel>

                        <!-- Version -->
                        <StackPanel Style="{StaticResource DetailMetadataStyle}">
                            <TextBlock Text="{x:Static resources:Resources.Dialog_VersionLabel}" Style="{StaticResource DetailMetadataLabelStyle}" />
                            <TextBlock Text="{Binding Version}" Style="{StaticResource DetailMetadataValueStyle}"  />
                        </StackPanel>

                        <!-- Authors -->
                        <DockPanel Margin="0,3,0,0">
                            <TextBlock DockPanel.Dock="Left" Text="{x:Static resources:Resources.Dialog_CreatedByLabel}" Style="{StaticResource DetailMetadataLabelStyle}" />
                            <TextBlock Text="{Binding Authors, Converter={StaticResource authorNamesConverter}}" Style="{StaticResource DetailMetadataValueStyle}" TextWrapping="Wrap" />
                        </DockPanel>

                        <!-- Owners -->
                        <DockPanel Margin="0,3,0,0" Visibility="{Binding Owners, Converter={StaticResource NullToVisibilityConverter}}">
                            <TextBlock DockPanel.Dock="Left" Text="{x:Static resources:Resources.Dialog_OwnersLabel}" Style="{StaticResource DetailMetadataLabelStyle}" />
                            <TextBlock Text="{Binding Owners, Converter={StaticResource authorNamesConverter}}" Style="{StaticResource DetailMetadataValueStyle}" TextWrapping="Wrap" />
                        </DockPanel>

                        <!-- Tags -->
                        <StackPanel Style="{StaticResource DetailMetadataStyle}" Visibility="{Binding Tags, Converter={StaticResource NullToVisibilityConverter}}">
                            <TextBlock Text="{x:Static resources:Resources.Dialog_TagLabel}" Style="{StaticResource DetailMetadataLabelStyle}" />
                            <TextBlock Text="{Binding Tags}" Style="{StaticResource DetailMetadataValueStyle}"  />
                        </StackPanel>

                        <!-- Language -->
                        <StackPanel Style="{StaticResource DetailMetadataStyle}" Visibility="{Binding Language, Converter={StaticResource NullToVisibilityConverter}}">
                            <TextBlock Text="{x:Static resources:Resources.Dialog_LanguageLabel}" Style="{StaticResource DetailMetadataLabelStyle}" />
                            <TextBlock Text="{Binding Language}" Style="{StaticResource DetailMetadataValueStyle}"  />
                        </StackPanel>

                        <!-- Require License Acceptance -->
                        <StackPanel Style="{StaticResource DetailMetadataStyle}">
                            <TextBlock Text="{x:Static resources:Resources.Dialog_RequireLicenseLabel}" Style="{StaticResource DetailMetadataLabelStyle}" />
                            <TextBlock Text="{Binding RequireLicenseAcceptance}" Style="{StaticResource DetailMetadataValueStyle}"  />
                        </StackPanel>

                        <!-- View License link -->
                        <TextBlock Visibility="{Binding LicenseUrl, Converter={StaticResource NullToVisibilityConverter}}">
                            <Hyperlink NavigateUri="{Binding LicenseUrl, Mode=OneTime}" ToolTip="{Binding LicenseUrl}" Click="Hyperlink_Click">
                                <Run Text="{x:Static resources:Resources.Dialog_ViewLicense}" />
                            </Hyperlink>
                        </TextBlock>

                        <!-- Project Url -->
                        <TextBlock Visibility="{Binding ProjectUrl, Converter={StaticResource NullToVisibilityConverter}}">
                            <Hyperlink NavigateUri="{Binding ProjectUrl, Mode=OneTime}" ToolTip="{Binding ProjectUrl}" Click="Hyperlink_Click">
                                <Run Text="{x:Static resources:Resources.Dialog_MoreInfo}" />
                            </Hyperlink>
                        </TextBlock>

                        <!-- Summary -->
                        <TextBlock Text="Summary:" Margin="0,3,0,0" Style="{StaticResource DetailMetadataLabelStyle}" Visibility="{Binding Summary, Converter={StaticResource NullToVisibilityConverter}}">
                        </TextBlock>

                        <TextBlock Style="{StaticResource DetailDescriptionTextBoxStyle}" Text="{Binding Summary}" Visibility="{Binding Summary, Converter={StaticResource NullToVisibilityConverter}}">
                        </TextBlock>

                        <!-- Description -->
                        <TextBlock Text="Description:" Margin="0,3,0,0" Style="{StaticResource DetailMetadataLabelStyle}">
                        </TextBlock>
                        
                        <TextBlock Style="{StaticResource DetailDescriptionTextBoxStyle}" Text="{Binding Description}" >
                        </TextBlock>

                        <!-- Dependencies list -->
                        <TextBlock Text="{x:Static resources:Resources.Dialog_DependenciesLabel}" Style="{StaticResource DetailMetadataLabelStyle}" />

                        <ItemsControl
                            x:Name="DependencyItems"
                            Margin="25,5,0,0"
                            ItemsSource="{Binding Dependencies}">
                        </ItemsControl>

                        <TextBlock 
                            Margin="25,5,0,5"
                            Visibility="{Binding Items.Count, ElementName=DependencyItems, Converter={StaticResource invertedCountConverter}}"
                            Style="{StaticResource NoDependencyTextBoxStyle}" 
                            Text="{x:Static resources:Resources.Dialog_NoDependencyLabel}">
                        </TextBlock>
                        
                        <!-- Framework assembly references -->
                        <TextBlock 
                            Visibility="{Binding Items.Count, ElementName=FrameworkAssemblyItems, Converter={StaticResource countConverter}}"
                            Text="{x:Static resources:Resources.Dialog_FrameworkAssembliesLabel}" 
                            Style="{StaticResource DetailMetadataLabelStyle}" />
                        
                        <ItemsControl
                            x:Name="FrameworkAssemblyItems"
                            Margin="25,5,0,0"
                            ItemsSource="{Binding FrameworkAssemblies}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" TextTrimming="CharacterEllipsis" ToolTipService.ToolTip="{Binding}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </ScrollViewer>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodel:PackageFile}">
                <StackPanel Background="Transparent" Orientation="Horizontal" ContextMenu="{StaticResource SharedContextMenu}">
                    <Image x:Name="ItemIcon" Visibility="Collapsed" Margin="0,0,2,0" />
                    <TextBlock x:Name="Header" Text="{Binding Name}">
                    </TextBlock>
                </StackPanel>

                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Path, Converter={StaticResource upperCaseConverter}}" Value="TOOLS\INSTALL.PS1">
                        <Setter TargetName="ItemIcon" Property="Visibility" Value="Visible" />
                        <Setter TargetName="ItemIcon" Property="Source" Value="/NuGetPackageExplorer;component/Images/Script.png" />
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Path, Converter={StaticResource upperCaseConverter}}" Value="TOOLS\UNINSTALL.PS1">
                        <Setter TargetName="ItemIcon" Property="Visibility" Value="Visible" />
                        <Setter TargetName="ItemIcon" Property="Source" Value="/NuGetPackageExplorer;component/Images/Script.png" />
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Path, Converter={StaticResource upperCaseConverter}}" Value="TOOLS\INIT.PS1">
                        <Setter TargetName="ItemIcon" Property="Visibility" Value="Visible" />
                        <Setter TargetName="ItemIcon" Property="Source" Value="/NuGetPackageExplorer;component/Images/Script.png" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <HierarchicalDataTemplate DataType="{x:Type viewmodel:PackageFolder}" ItemsSource="{Binding Children}">
                <StackPanel Background="Transparent" Orientation="Horizontal" ContextMenu="{StaticResource FolderSharedContextMenu}">
                    <Image x:Name="ItemIcon" Margin="0,0,2,0" Source="/NuGetPackageExplorer;component/Images/Folder.ico" />
                    <TextBlock x:Name="Header" Text="{Binding Path, Converter={StaticResource frameworkConverter}}" FontWeight="SemiBold" />
                </StackPanel>

                <HierarchicalDataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Path, Converter={StaticResource upperCaseConverter}}" Value="LIB">
                        <Setter TargetName="ItemIcon" Property="Source" Value="/NuGetPackageExplorer;component/Images/Lib.png" />
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Path, Converter={StaticResource upperCaseConverter}}" Value="CONTENT">
                        <Setter TargetName="ItemIcon" Property="Source" Value="/NuGetPackageExplorer;component/Images/NoteHS.png" />
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Path, Converter={StaticResource upperCaseConverter}}" Value="TOOLS">
                        <Setter TargetName="ItemIcon" Property="Source" Value="/NuGetPackageExplorer;component/Images/Tools.png" />
                    </DataTrigger>
                </HierarchicalDataTemplate.Triggers>
            </HierarchicalDataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    
    <Window.CommandBindings>
        <CommandBinding Command="New" Executed="NewMenuItem_Click" />
        <CommandBinding Command="Open" Executed="OpenMenuItem_Click" />
        <CommandBinding Command="Save" Executed="SaveMenuItem_Click" CanExecute="CanExecuteSaveCommand" />
        <CommandBinding Command="SaveAs" Executed="SaveAsMenuItem_Click" CanExecute="CanExecuteSaveCommand" />
        <CommandBinding Command="Close" Executed="CloseMenuItem_Click" CanExecute="CanExecuteCloseCommand" />
        <CommandBinding Command="{x:Static self:Commands.OpenFromFeedCommand}" Executed="OpenPackageFromNuGetFeed" />
        <CommandBinding Command="{x:Static self:Commands.PublishToFeedCommand}" Executed="OnPublishButtonClick" CanExecute="CanPublishToFeedCommand" />
        <CommandBinding Command="{x:Static self:Commands.AddRootFolderCommand}" Executed="CommandBinding_Executed" CanExecute="CommandBinding_CanExecute" />
    </Window.CommandBindings>
    
    <Window.InputBindings>
        <KeyBinding Key="K" Modifiers="Control" Command="{Binding EditCommand, FallbackValue={StaticResource DisabledCommand}}" CommandParameter="{Binding MetadataBindingGroup, ElementName=PackageMetadataEditor}" />
    </Window.InputBindings>
    
    <DockPanel LastChildFill="True">
        <!-- Menu bar -->
        <Menu DockPanel.Dock="Top">
            <self:GrayscaleMenuItem Header="_File">
                <MenuItem Command="New" Header="_New">
                    <MenuItem.Icon>
                        <Image Source="/NuGetPackageExplorer;component/Images/NewDocumentHS.png">
                        </Image>
                    </MenuItem.Icon>
                </MenuItem>
                <self:GrayscaleMenuItem Command="Open" Header="_Open...">
                    <self:GrayscaleMenuItem.Icon>
                        <Image Source="/NuGetPackageExplorer;component/Images/openHS.png">
                        </Image>
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
                <MenuItem Header="Open from F_eed..." Command="{x:Static self:Commands.OpenFromFeedCommand}">
                </MenuItem>
                <Separator />
                <MenuItem Command="Close" Header="_Close" />
                <Separator />
                <self:GrayscaleMenuItem x:Name="SaveMenuItem" Header="_Save" Command="Save" CommandParameter="Save">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleImage Source="/NuGetPackageExplorer;component/Images/saveHS.png" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
                <self:GrayscaleMenuItem Header="Save _As..." Command="SaveAs" CommandParameter="SaveAs" />
                <Separator />
                <MenuItem Header="Expor_t..." Click="OnExportMenuItem_Click">
                    <MenuItem.Style>
                        <Style TargetType="{x:Type MenuItem}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsInEditMode, FallbackValue=True}" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
                <self:GrayscaleMenuItem Command="{x:Static self:Commands.PublishToFeedCommand}" Header="_Publish...">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleImage Source="/NuGetPackageExplorer;component/Images/PublishToWebHS.png" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
                <Separator />
                <MenuItem Header="_Recent Files" x:Name="RecentFilesMenuItem" Visibility="{Binding Files.Count, Converter={StaticResource countConverter}}" ItemsSource="{Binding Files}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <EventSetter Event="Click" Handler="RecentFileMenuItem_Click" />
                            <Setter Property="Header" Value="{Binding Path,Converter={StaticResource TruncatePathConverter}, FallbackValue='Clear Recent Files List'}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding}" Value="{x:Null}">
                                    <Setter Property="Icon">
                                        <Setter.Value>
                                            <Image Source="/NuGetPackageExplorer;component/Images/Delete.png" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator Visibility="{Binding Visibility, ElementName=RecentFilesMenuItem, Mode=OneWay}" />
                <MenuItem Header="E_xit" Click="ExitMenuItem_Click" />
            </self:GrayscaleMenuItem>

            <self:GrayscaleMenuItem Header="_Edit">
                <self:GrayscaleMenuItem Header="Edit _Package Metadata" InputGestureText="Ctrl+K" Command="{Binding EditCommand, FallbackValue={StaticResource DisabledCommand}}" CommandParameter="{Binding MetadataBindingGroup, ElementName=PackageMetadataEditor}" />
                <Separator />
                <self:GrayscaleMenuItem Command="Cut">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleImage Source="/NuGetPackageExplorer;component/Images/CutHS.png" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
                <self:GrayscaleMenuItem Command="Copy">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleImage Source="/NuGetPackageExplorer;component/Images/CopyHS.png" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
                <self:GrayscaleMenuItem Command="Paste">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleImage Source="/NuGetPackageExplorer;component/Images/PasteHS.png" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
            </self:GrayscaleMenuItem>
            
            <MenuItem Header="_View">
                <MenuItem Header="Text _Size" x:Name="FontSizeMenuItem">
                    <self:GrayscaleMenuItem Header="_Normal" Tag="12" Click="OnFontSizeItem_Click" IsCheckable="True" />
                    <self:GrayscaleMenuItem Header="_Larger" Tag="14" Click="OnFontSizeItem_Click" IsCheckable="True" />
                    <self:GrayscaleMenuItem Header="L_argest" Tag="16" Click="OnFontSizeItem_Click" IsCheckable="True" />
                    
                    <MenuItem.Icon>
                        <Image Source="/NuGetPackageExplorer;component/Images/FontDialogHS.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <MenuItem Header="_Content" Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}}">
                <MenuItem IsEnabled="{Binding SelectedItem, ElementName=PackagesTreeView, Converter={StaticResource PackagePartConverter}, ConverterParameter=file, FallbackValue=False}" Header="View File _Content" Command="{Binding ViewContentCommand}" CommandParameter="{Binding SelectedItem, ElementName=PackagesTreeView}" />
                <MenuItem IsEnabled="{Binding SelectedItem, ElementName=PackagesTreeView, Converter={StaticResource PackagePartConverter}, ConverterParameter=file, FallbackValue=False}" Header="Open File in Window_s shell..." Command="{Binding OpenContentFileCommand}" CommandParameter="{Binding SelectedItem, ElementName=PackagesTreeView}" />
                <Separator />
                <MenuItem Header="_Add">
                    <MenuItem Header="_Existing File..." Command="{Binding AddContentFileCommand}" CommandParameter="{Binding SelectedItem, ElementName=PackagesTreeView}" />
                    <self:GrayscaleMenuItem Header="_New Folder" Click="OnAddNewFolderClick" IsEnabled="{Binding SelectedItem, ElementName=PackagesTreeView, Converter={StaticResource PackagePartConverter}, ConverterParameter=folder, FallbackValue=False, TargetNullValue=true}">
                        <self:GrayscaleMenuItem.Icon>
                            <self:GrayscaleImage Source="/NuGetPackageExplorer;component/Images/NewFolderHS.png" />
                        </self:GrayscaleMenuItem.Icon>
                    </self:GrayscaleMenuItem>
                    <Separator />
                    <self:GrayscaleMenuItem Header="_Content Folder" Command="{x:Static self:Commands.AddRootFolderCommand}" CommandParameter="content">
                        <self:GrayscaleMenuItem.Icon>
                            <self:GrayscaleImage Source="/NuGetPackageExplorer;component/Images/NoteHS.png" />
                        </self:GrayscaleMenuItem.Icon>
                    </self:GrayscaleMenuItem>
                    <self:GrayscaleMenuItem Header="_Lib Folder" Command="{x:Static self:Commands.AddRootFolderCommand}" CommandParameter="lib">
                        <self:GrayscaleMenuItem.Icon>
                            <self:GrayscaleImage Source="/NuGetPackageExplorer;component/Images/Lib.png" />
                        </self:GrayscaleMenuItem.Icon>
                    </self:GrayscaleMenuItem>
                    <self:GrayscaleMenuItem Header="_Tools Folder" Command="{x:Static self:Commands.AddRootFolderCommand}" CommandParameter="tools">
                        <self:GrayscaleMenuItem.Icon>
                            <self:GrayscaleImage Source="/NuGetPackageExplorer;component/Images/Tools.png" />
                        </self:GrayscaleMenuItem.Icon>
                    </self:GrayscaleMenuItem>
                </MenuItem>

                <MenuItem Header="_Rename..." Click="OnRenameItemClick" IsEnabled="{Binding SelectedItem, ElementName=PackagesTreeView, Converter={StaticResource PackagePartConverter}, FallbackValue=False, TargetNullValue=False}" />
                <MenuItem Header="_Delete..." Command="{Binding DeleteContentCommand}" CommandParameter="{Binding SelectedItem, ElementName=PackagesTreeView}" />
            </MenuItem>

            <self:GrayscaleMenuItem Header="_Help">
                <self:GrayscaleMenuItem Header="_NuGet Documentation" Click="ViewFileFormatItem_Click" Tag="http://nuget.codeplex.com/documentation">
                    <self:GrayscaleMenuItem.Icon>
                        <self:GrayscaleImage Source="/NuGetPackageExplorer;component/Images/Book_angleHS.png" />
                    </self:GrayscaleMenuItem.Icon>
                </self:GrayscaleMenuItem>
                <MenuItem Header="How to _Create Package" Click="ViewFileFormatItem_Click" Tag="http://nuget.codeplex.com/documentation?title=Creating%20a%20Package" />
                <MenuItem Header="_Version Range Specification" Click="ViewFileFormatItem_Click" Tag="http://nuget.codeplex.com/wikipage?title=Version%20Range%20Specification" />
                <MenuItem Header="Framework Assembly F_ormat" Click="ViewFileFormatItem_Click" Tag="http://nuget.codeplex.com/wikipage?title=.nuspec%20v1.2%20Format#x_frameworkassemblies" />
                <Separator />
                <MenuItem Header="_Open Bug..." Click="ViewFileFormatItem_Click" Tag="http://nuget.codeplex.com/WorkItem/Create" />
                <MenuItem Header="_About..." Click="AboutMenuItem_Click" />
            </self:GrayscaleMenuItem>
        </Menu>

        <!-- Status bar -->
        <StatusBar Grid.Row="2" DockPanel.Dock="Bottom">
            <StatusBarItem x:Name="PackageSourceItem" Content="{Binding PackageSource, FallbackValue=Ready}" />
        </StatusBar>

        <!-- Main content -->
        <Grid 
            x:Name="ContentGrid" 
            Grid.Row="1" 
            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
            Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}, FallbackValue=Collapsed}">
            
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="350" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- package metadata -->
            <GroupBox Grid.RowSpan="3" BorderThickness="1" BorderBrush="DarkGray" Background="#FCFEF0" Margin="3" Header="Package metadata" FlowDirection="LeftToRight">
                <Grid>
                    <ContentControl 
                        Content="{Binding PackageMetadata}" 
                        ContentTemplate="{StaticResource PackageDetailTemplate}" 
                        Visibility="{Binding IsInEditMode, Converter={StaticResource invertedBoolToVis}, FallbackValue=Collapsed}">
                    </ContentControl>

                    <self:PackageMetadataEditor 
                        x:Name="PackageMetadataEditor"
                        Margin="0,8,0,3"
                        Visibility="{Binding IsInEditMode, Converter={StaticResource boolToVis}, FallbackValue=Collapsed}" />
                </Grid>
            </GroupBox>

            <!-- package content tree view -->
            <GroupBox BorderBrush="DarkGray" Background="Transparent" BorderThickness="1" Grid.Column="1" Margin="3" Header="Package contents">
                <TreeView 
                    x:Name="PackagesTreeView" 
                    ItemsSource="{Binding PackageParts}" 
                    BorderThickness="0" 
                    Margin="0,4,0,0" 
                    DragOver="OnTreeViewItemDragOver"
                    Drop="OnTreeViewItemDrop"
                    SelectedItemChanged="OnTreeViewSelectedItemChanged" 
                    PreviewMouseRightButtonDown="TreeView_PreviewMouseRightButtonDown" 
                    KeyDown="PackagesTreeView_KeyDown">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <EventSetter Event="MouseDoubleClick" Handler="OnTreeViewItemDoubleClick" />
                            <EventSetter Event="DragOver" Handler="OnTreeViewItemDragOver" />
                            <EventSetter Event="Drop" Handler="OnTreeViewItemDrop" />
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, FallbackValue=False}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                            <Setter Property="AllowDrop" Value="True" />
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.ContextMenu>
                        <ContextMenu>
                            <ContextMenu.CommandBindings>
                                <CommandBinding Command="{x:Static self:Commands.AddRootFolderCommand}" Executed="CommandBinding_Executed" CanExecute="CommandBinding_CanExecute" />
                            </ContextMenu.CommandBindings>

                            <MenuItem Header="_Existing File..." Command="{Binding AddContentFileCommand}" />
                            <MenuItem Header="_New Folder" Click="OnAddNewFolder2Click">
                                <MenuItem.Icon>
                                    <Image Source="/NuGetPackageExplorer;component/Images/NewFolderHS.png" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <self:GrayscaleMenuItem Header="Add _Content Folder" Command="{x:Static self:Commands.AddRootFolderCommand}" CommandParameter="content">
                                <self:GrayscaleMenuItem.Icon>
                                    <self:GrayscaleImage Source="/NuGetPackageExplorer;component/Images/NoteHS.png" />
                                </self:GrayscaleMenuItem.Icon>
                            </self:GrayscaleMenuItem>
                            <self:GrayscaleMenuItem Header="Add _Lib Folder" Command="{x:Static self:Commands.AddRootFolderCommand}" CommandParameter="lib">
                                <self:GrayscaleMenuItem.Icon>
                                    <self:GrayscaleImage Source="/NuGetPackageExplorer;component/Images/Lib.png" />
                                </self:GrayscaleMenuItem.Icon>
                            </self:GrayscaleMenuItem>
                            <self:GrayscaleMenuItem Header="Add _Tools Folder" Command="{x:Static self:Commands.AddRootFolderCommand}" CommandParameter="tools">
                                <self:GrayscaleMenuItem.Icon>
                                    <self:GrayscaleImage Source="/NuGetPackageExplorer;component/Images/Tools.png" />
                                </self:GrayscaleMenuItem.Icon>
                            </self:GrayscaleMenuItem>
                        </ContextMenu>
                    </TreeView.ContextMenu>

                </TreeView>
            </GroupBox>
            
            <GridSplitter 
                Grid.Column="1" 
                Grid.Row="1" 
                Visibility="{Binding ShowContentViewer, Converter={StaticResource boolToVis}, FallbackValue=Collapsed}"
                ShowsPreview="True" 
                ResizeBehavior="PreviousAndNext" 
                Height="4" 
                Margin="0,-2,0,0"
                HorizontalAlignment="Stretch" 
                Background="Transparent" 
                VerticalAlignment="Bottom" />

            <!-- content viewer -->
            <GroupBox
                x:Name="FileContentContainer"
                Header="{Binding CurrentFileInfo.Name, TargetNullValue='Content Viewer'}"
                Grid.Row="2"
                Grid.Column="1" 
                Visibility="{Binding ShowContentViewer, Converter={StaticResource boolToVis}, FallbackValue=Collapsed}"
                Margin="3,0,3,3" 
                Padding="0,4,0,0"
                Background="#FCFEF0" 
                BorderBrush="DarkGray" 
                BorderThickness="1" 
                IsVisibleChanged="FileContentContainer_IsVisibleChanged">
            </GroupBox>
            
            <Button 
                HorizontalAlignment="Right" 
                VerticalAlignment="Top" 
                Background="White"
                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                Command="{Binding ViewContentCommand}"
                CommandParameter="Hide"
                Margin="10,0"
                Visibility="{Binding ShowContentViewer, Converter={StaticResource boolToVis}, FallbackValue=Collapsed}"
                Grid.Row="2" 
                Grid.Column="1"
                ToolTipService.ToolTip="Close viewer pane">
                <Image Source="/NuGetPackageExplorer;component/Images/Delete.png" />
            </Button>
        </Grid>
              
    </DockPanel>
</Window>
