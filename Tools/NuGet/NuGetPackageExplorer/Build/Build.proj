<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Go" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <UsingTask
        TaskName="GetFirstDirectory"
        TaskFactory="CodeTaskFactory"
        AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
        <ParameterGroup>
            <SearchDirectory ParameterType="System.String" Required="true" />
            <FirstChildDirectoryName ParameterType="System.String" Output="true" />
        </ParameterGroup>
        <Task>
            <Using Namespace="System" />
            <Using Namespace="System.IO" />
            <Using Namespace="System.Linq" />
            <Code Type="Fragment" Language="cs"><![CDATA[
                if (!Directory.Exists(SearchDirectory)) {    
                    Log.LogError("Directory '{0}' does not exist.", SearchDirectory);
                    return false;
                }
                
                var dirInfo = new DirectoryInfo(SearchDirectory);
                var firstChild = dirInfo.EnumerateDirectories().FirstOrDefault();
                if (firstChild != null) {
                    FirstChildDirectoryName = firstChild.Name;
                    return true;
                }
                else {
                    Log.LogError("Didn't find any child directory under '{0}'.", SearchDirectory);
                    return false;
                }
            ]]> 
            </Code>
        </Task>
    </UsingTask>
	
	<PropertyGroup>
        <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
        <DeploymentUrl Condition="'$(DeploymentUrl)' == ''">http://nuget.codeplex.com/releases/clickonce/</DeploymentUrl>
        <ApplicationName>NuGetPackageExplorer</ApplicationName>
        <PackageExplorerRoot>$(MSBuildProjectDirectory)\..</PackageExplorerRoot>
        <ClickOnceCertificateFile>$(PackageExplorerRoot)\PackageExplorer_TemporaryKey.pfx</ClickOnceCertificateFile>
        <ManifestFilePath>$(MSBuildProjectDirectory)\VisualStyleManifest.xml</ManifestFilePath>
        <ManifestToolPath>C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\Bin\mt.exe</ManifestToolPath>
        <MageToolPath>C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\bin\NETFX 4.0 Tools\mage.exe</MageToolPath>
        <CertificateFilePath>$(PackageExplorerRoot)\PackageExplorer_TemporaryKey.pfx</CertificateFilePath>
        <PublisherName>Outercurve Foundation</PublisherName>
        <DropDirectory>$(PackageExplorerRoot)\bin</DropDirectory>
        <PublishedDirectory>$(PackageExplorerRoot)\PackageExplorer\bin\$(Configuration)\app.publish</PublishedDirectory>
        <DeploymentManifestFileName>$(ApplicationName).application</DeploymentManifestFileName>
        <ExeFileName>$(ApplicationName).exe</ExeFileName>
        <AppManifestFileName>$(ExeFileName).manifest</AppManifestFileName>
        <UploadDirectory>$(DropDirectory)\publish</UploadDirectory>
        <ZipExe>$(PackageExplorerRoot)\..\..\7za920\7za.exe</ZipExe>
	</PropertyGroup>
	
	<Target Name="Go" DependsOnTargets="CheckTools; BuildAndPublish; ReportFxCopResults; CreateDropDirectories; CopyOutputsToDropDirectories; AddVisualStyleManifestToDeployment; ZipPublishedFiles">
	</Target>
	
	<Target Name="CheckTools">
        <Error
            Condition="!Exists('$(ManifestFilePath)')"
            Text="Could not find the resource tool at $(ManifestFilePath). Cannot proceed." />
            
        <Error
            Condition="!Exists('$(MageToolPath)')"
            Text="Could not find the resource tool at $(MageToolPath). Cannot proceed." />
	</Target>
	
	<Target Name="BuildAndPublish">
        <RemoveDir Directories="$(PublishedDirectory)" Condition="Exists('$(PublishedDirectory)')" ContinueOnError="True" />
        <MSBuild Projects="$(PackageExplorerRoot)\NuGetPackageExplorer.sln" Targets="Publish" />
	</Target>
	
    <Target Name="ReportFxCopResults">
        <ItemGroup>
            <FxCopOutputItems Include="$(PackageExplorerRoot)\**\*.dll.CodeAnalysisLog.xml" />
        </ItemGroup>
        <Message Text="%(FxCopOutputItems.Identity)" />
    </Target>
	
	<Target Name="CreateDropDirectories">
        <Message Text="Making the output directories for the compiled output at '$(DropDirectory)'." />
        <RemoveDir Directories="$(DropDirectory)" Condition="Exists('$(DropDirectory)')" ContinueOnError="True" />
        <MakeDir Directories="$(DropDirectory)" Condition="!Exists('$(DropDirectory)')" />
	</Target>
	
	<Target Name="CopyOutputsToDropDirectories">	
        <CreateItem Include="$(PublishedDirectory)\**\*.*">
            <Output TaskParameter="Include" ItemName="PublishedFiles" />
        </CreateItem>

        <Copy SourceFiles="@(PublishedFiles)" DestinationFiles="@(PublishedFiles->'$(DropDirectory)\%(RecursiveDir)%(FileName)%(Extension)')" />
	</Target>
	
	<Target Name="AddVisualStyleManifestToDeployment">
        <!-- Rename .deploy files dropping the extension. Required by mage.exe -->
        <CreateItem Include="$(DropDirectory)\**\*.deploy">
            <Output TaskParameter="Include" ItemName="DeployedFiles" />
        </CreateItem>

        <Copy SourceFiles="@(DeployedFiles)" DestinationFiles="@(DeployedFiles->'$(DropDirectory)\%(RecursiveDir)%(FileName)')">
            <Output TaskParameter="CopiedFiles" ItemName="DeployFilesWithoutDeployExtension" />
        </Copy>
        <Delete Files="@(DeployedFiles)" />
        
        <GetFirstDirectory SearchDirectory="$(DropDirectory)\Application Files">
            <Output TaskParameter="FirstChildDirectoryName" PropertyName="FirstChildDirectoryName" />
        </GetFirstDirectory>
        
        <CreateProperty Value="Application Files\$(FirstChildDirectoryName)">
            <Output TaskParameter="Value" PropertyName="ManifestCodeBase" />
        </CreateProperty>
        
        <CreateProperty Value="$(DropDirectory)\$(ManifestCodeBase)">
            <Output TaskParameter="Value" PropertyName="AppManifestDirectory" />
        </CreateProperty>
        
        <!-- run mt.exe -->
        <Exec 
            Command="&quot;$(ManifestToolPath)&quot; -nologo -manifest &quot;$(ManifestFilePath)&quot; -outputresource:$(ExeFileName);#1" 
            WorkingDirectory="$(AppManifestDirectory)" />
            
        <!-- sign app manifest with mage.exe -->
        <Exec
            Command="&quot;$(MageToolPath)&quot; -u &quot;$(AppManifestFileName)&quot; -cf &quot;$(CertificateFilePath)&quot; -tr FullTrust"
            WorkingDirectory="$(AppManifestDirectory)" />
        
        <!-- Add the .deploy extension back --> 
        <Copy SourceFiles="@(DeployFilesWithoutDeployExtension)" DestinationFiles="@(DeployFilesWithoutDeployExtension->'%(FullPath).deploy')" />
        <Delete Files="@(DeployFilesWithoutDeployExtension)" />
        
        <!-- sign deployment manifest with mage.exe -->
        <Exec
            Command="&quot;$(MageToolPath)&quot; -u &quot;$(DeploymentManifestFileName)&quot; -appc &quot;$(ManifestCodeBase)\$(AppManifestFileName)&quot; -appm &quot;$(AppManifestDirectory)\$(AppManifestFileName)&quot; -cf &quot;$(CertificateFilePath)&quot; -pub &quot;$(PublisherName)&quot; -pu &quot;$(DeploymentUrl)/$(DeploymentManifestFileName)&quot;"
            WorkingDirectory="$(DropDirectory)" />
	</Target>
	
	<Target Name="ZipPublishedFiles">
        <MakeDir Directories="$(UploadDirectory)" Condition="!Exists('$(UploadDirectory)')" />
	
        <Exec Command="&quot;$(ZipExe)&quot; a $(UploadDirectory)\$(ApplicationName).zip" WorkingDirectory="$(DropDirectory)" />
	</Target>
</Project>